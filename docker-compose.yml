version: '3.7'

services:

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  elastic-setup:
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - elastic-setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    volumes:
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    volumes:
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch

  elastic-fleet:
    image: docker.elastic.co/beats/elastic-agent:${ELASTIC_VERSION}
    networks:
      - elk
    environment:
      - FLEET_SERVER_ENABLE=true
      - FLEET_SERVER_PORT=8220
      - FLEET_SERVER_POLICY_ID=fleet-agent-policy
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVICE_TOKEN:-}
      - FLEET_SERVER_ELASTICSEARCH_USERNAME=elastic
      - FLEET_SERVER_ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-}
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://elasticsearch:9200
      - FLEET_SERVER_INSECURE_HTTP=true
      - FLEET_SERVER_HOST=0.0.0.0
      - KIBANA_FLEET_USERNAME=elastic
      - KIBANA_FLEET_PASSWORD=${ELASTIC_PASSWORD:-}
      - KIBANA_FLEET_SETUP=true
      - KIBANA_FLEET_HOST=http://kibana:5601
    depends_on:
      - elasticsearch
      - kibana

  elastic-agent:
    image: docker.elastic.co/beats/elastic-agent:${ELASTIC_VERSION}
    networks:
      - elk
    environment:
      - FLEET_ENROLL=true
      - FLEET_INSECURE=true
      - FLEET_URL=http://elastic-fleet:8220
      - FLEET_ENROLLMENT_TOKEN=${AGENT_ENROLLMENT_TOKEN:-}
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-}
      - ELASTICSEARCH_HOSTS='["https://elasticsearch:9200"]'
    depends_on:
      - elastic-fleet

networks:
  elk:
    driver: bridge

volumes:
  elastic-setup:
  elasticsearch:
